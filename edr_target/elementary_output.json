{"creation_time": "2023-10-19T09:37:03+00:00", "days_back": 7, "models": {"model.demo_dbt.dim_customer": {"name": "dim_customer", "unique_id": "model.demo_dbt.dim_customer", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension table contains the details of all distinct customers names their respective id's,cities anf city id's", "full_path": "models/marts/dim_customer.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "model_name": "dim_customer", "normalized_full_path": "demo_dbt/models/marts/dim_customer.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "artifact_type": "model"}, "model.demo_dbt.dim_product": {"name": "dim_product", "unique_id": "model.demo_dbt.dim_product", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension Table contains details about the Name of Drug and Class of Drug (Antibiotics, etc.) and their id's", "full_path": "models/marts/dim_product.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "model_name": "dim_product", "normalized_full_path": "demo_dbt/models/marts/dim_product.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_product", "artifact_type": "model"}, "model.demo_dbt.dim_sales_rep": {"name": "dim_sales_rep", "unique_id": "model.demo_dbt.dim_sales_rep", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension Table contains details about the Name of the Sales resentatives who facilitated the sale,sales Team and their id's", "full_path": "models/marts/dim_sales_rep.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "model_name": "dim_sales_rep", "normalized_full_path": "demo_dbt/models/marts/dim_sales_rep.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "artifact_type": "model"}, "model.demo_dbt.dim_sales_team": {"name": "dim_sales_team", "unique_id": "model.demo_dbt.dim_sales_team", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension Table contains details about the Sale resentatives's team and Sales resentatives's Manager Names and their id's", "full_path": "models/marts/dim_sales_team.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "model_name": "dim_sales_team", "normalized_full_path": "demo_dbt/models/marts/dim_sales_team.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "artifact_type": "model"}, "model.demo_dbt.stg_city": {"name": "stg_city", "unique_id": "model.demo_dbt.stg_city", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This table contains the distinct cities of customers and their ID's", "full_path": "models/staging/stg_city.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "model_name": "stg_city", "normalized_full_path": "demo_dbt/models/staging/stg_city.sql", "fqn": "demo_db.dbt_project_staging.stg_city", "artifact_type": "model"}, "model.demo_dbt.stg_customer": {"name": "stg_customer", "unique_id": "model.demo_dbt.stg_customer", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This table contains the details of all distinct customers", "full_path": "models/staging/stg_customer.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "model_name": "stg_customer", "normalized_full_path": "demo_dbt/models/staging/stg_customer.sql", "fqn": "demo_db.dbt_project_staging.stg_customer", "artifact_type": "model"}, "model.demo_dbt.stg_product": {"name": "stg_product", "unique_id": "model.demo_dbt.stg_product", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This Table contains details about the Name of Drug and Class of Drug (Antibiotics, etc.)", "full_path": "models/staging/stg_product.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_product", "model_name": "stg_product", "normalized_full_path": "demo_dbt/models/staging/stg_product.sql", "fqn": "demo_db.dbt_project_staging.stg_product", "artifact_type": "model"}, "model.demo_dbt.stg_sales_rep": {"name": "stg_sales_rep", "unique_id": "model.demo_dbt.stg_sales_rep", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This Table contains details about the Name of the Sales resentatives who facilitated the sale", "full_path": "models/staging/stg_sales_rep.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "model_name": "stg_sales_rep", "normalized_full_path": "demo_dbt/models/staging/stg_sales_rep.sql", "fqn": "demo_db.dbt_project_staging.stg_sales_rep", "artifact_type": "model"}, "model.demo_dbt.stg_sales_team": {"name": "stg_sales_team", "unique_id": "model.demo_dbt.stg_sales_team", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This Table contains details about the Sale resentatives's team and Sales resentatives's Manager Names", "full_path": "models/staging/stg_sales_team.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "model_name": "stg_sales_team", "normalized_full_path": "demo_dbt/models/staging/stg_sales_team.sql", "fqn": "demo_db.dbt_project_staging.stg_sales_team", "artifact_type": "model"}, "model.demo_dbt.stg_subchannel": {"name": "stg_subchannel", "unique_id": "model.demo_dbt.stg_subchannel", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This Table contains details about the Sector of the buyer (Government, Private, etc.) and ids for subchannels", "full_path": "models/staging/stg_subchannel.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "model_name": "stg_subchannel", "normalized_full_path": "demo_dbt/models/staging/stg_subchannel.sql", "fqn": "demo_db.dbt_project_staging.stg_subchannel", "artifact_type": "model"}, "model.demo_dbt.dim_channel": {"name": "dim_channel", "unique_id": "model.demo_dbt.dim_channel", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension table contains details of store Class of buyer (Hospital, Pharmacy) and their respective ID's", "full_path": "models/marts/dim_channel.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "model_name": "dim_channel", "normalized_full_path": "demo_dbt/models/marts/dim_channel.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "artifact_type": "model"}, "model.demo_dbt.dim_subchannel": {"name": "dim_subchannel", "unique_id": "model.demo_dbt.dim_subchannel", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension Table contains details about the Sector of the buyer (Government, Private, etc.) and ids for subchannels", "full_path": "models/marts/dim_subchannel.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "model_name": "dim_subchannel", "normalized_full_path": "demo_dbt/models/marts/dim_subchannel.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "artifact_type": "model"}, "model.demo_dbt.stg_channel": {"name": "stg_channel", "unique_id": "model.demo_dbt.stg_channel", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This table store Class of buyer (Hospital, Pharmacy) and their respective ID's", "full_path": "models/staging/stg_channel.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "model_name": "stg_channel", "normalized_full_path": "demo_dbt/models/staging/stg_channel.sql", "fqn": "demo_db.dbt_project_staging.stg_channel", "artifact_type": "model"}, "model.demo_dbt.dim_city": {"name": "dim_city", "unique_id": "model.demo_dbt.dim_city", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension table contains details of  the distinct cities of customers and their ID's,longitude and latitude", "full_path": "models/marts/dim_city.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_city", "model_name": "dim_city", "normalized_full_path": "demo_dbt/models/marts/dim_city.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_city", "artifact_type": "model"}, "model.demo_dbt.dim_country": {"name": "dim_country", "unique_id": "model.demo_dbt.dim_country", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension table contains details of countries of customers and ID's for countries", "full_path": "models/marts/dim_country.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "model_name": "dim_country", "normalized_full_path": "demo_dbt/models/marts/dim_country.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_country", "artifact_type": "model"}, "model.demo_dbt.stg_country": {"name": "stg_country", "unique_id": "model.demo_dbt.stg_country", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This table contains details of countries of customers and ID's for countries", "full_path": "models/staging/stg_country.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "model_name": "stg_country", "normalized_full_path": "demo_dbt/models/staging/stg_country.sql", "fqn": "demo_db.dbt_project_staging.stg_country", "artifact_type": "model"}, "model.demo_dbt.dim_distributor": {"name": "dim_distributor", "unique_id": "model.demo_dbt.dim_distributor", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "This Dimension table contains details about the different Wholesaler and their id's", "full_path": "models/marts/dim_distributor.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "model_name": "dim_distributor", "normalized_full_path": "demo_dbt/models/marts/dim_distributor.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "artifact_type": "model"}, "model.demo_dbt.stg_distributor": {"name": "stg_distributor", "unique_id": "model.demo_dbt.stg_distributor", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This table contains details about the different Wholesaler and their id's", "full_path": "models/staging/stg_distributor.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "model_name": "stg_distributor", "normalized_full_path": "demo_dbt/models/staging/stg_distributor.sql", "fqn": "demo_db.dbt_project_staging.stg_distributor", "artifact_type": "model"}, "model.demo_dbt.dim_month": {"name": "dim_month", "unique_id": "model.demo_dbt.dim_month", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": " This Dimension Table contains details about the Month sale was made and months respective id's", "full_path": "models/marts/dim_month.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "model_name": "dim_month", "normalized_full_path": "demo_dbt/models/marts/dim_month.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.dim_month", "artifact_type": "model"}, "model.demo_dbt.stg_month": {"name": "stg_month", "unique_id": "model.demo_dbt.stg_month", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": " This Table contains details about the  month when sale was made", "full_path": "models/staging/stg_month.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "model_name": "stg_month", "normalized_full_path": "demo_dbt/models/staging/stg_month.sql", "fqn": "demo_db.dbt_project_staging.stg_month", "artifact_type": "model"}, "model.demo_dbt.fact_sales": {"name": "fact_sales", "unique_id": "model.demo_dbt.fact_sales", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "contains sales transaction across dims included in this data model.", "full_path": "models/marts/fact_sales.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "model_name": "fact_sales", "normalized_full_path": "demo_dbt/models/marts/fact_sales.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "artifact_type": "model"}, "model.demo_dbt.stg_sales": {"name": "stg_sales", "unique_id": "model.demo_dbt.stg_sales", "owners": [], "tags": ["t1"], "package_name": "demo_dbt", "description": "This Table contains details about the Amount made from sale,Price product was sold for,Quantity purchased,Year sale was made and id's ", "full_path": "models/staging/stg_sales.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "model_name": "stg_sales", "normalized_full_path": "demo_dbt/models/staging/stg_sales.sql", "fqn": "demo_db.dbt_project_staging.stg_sales", "artifact_type": "model"}, "model.demo_dbt.pharma_with_id": {"name": "pharma_with_id", "unique_id": "model.demo_dbt.pharma_with_id", "owners": [], "tags": [], "package_name": "demo_dbt", "description": "", "full_path": "models/New_stagging/pharma_with_id.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT", "table_name": "pharma_with_id", "model_name": "pharma_with_id", "normalized_full_path": "demo_dbt/models/New_stagging/pharma_with_id.sql", "fqn": "demo_db.dbt_project.pharma_with_id", "artifact_type": "model"}, "model.demo_dbt.audit_helper": {"name": "audit_helper", "unique_id": "model.demo_dbt.audit_helper", "owners": [], "tags": ["t2"], "package_name": "demo_dbt", "description": "", "full_path": "models/marts/audit_helper.sql", "meta": {}, "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "audit_helper", "model_name": "audit_helper", "normalized_full_path": "demo_dbt/models/marts/audit_helper.sql", "fqn": "demo_db.dbt_project_pharma_fact_dim.audit_helper", "artifact_type": "model"}, "source.demo_dbt.snowflake.pharma_with_id": {"name": "pharma_with_id", "unique_id": "source.demo_dbt.snowflake.pharma_with_id", "owners": [], "tags": [], "package_name": "demo_dbt", "description": "", "full_path": "models/staging/source.yml", "meta": {}, "source_name": "snowflake", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT", "table_name": "pharma_with_id", "model_name": "pharma_with_id", "normalized_full_path": "demo_dbt/models/staging/source.sql", "fqn": "demo_db.dbt_project.pharma_with_id", "artifact_type": "source"}, "source.demo_dbt.snowflake.pharma": {"name": "pharma", "unique_id": "source.demo_dbt.snowflake.pharma", "owners": [], "tags": [], "package_name": "demo_dbt", "description": "", "full_path": "models/New_stagging/source.yml", "meta": {}, "source_name": "snowflake", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT", "table_name": "pharma", "model_name": "pharma", "normalized_full_path": "demo_dbt/models/New_stagging/source.sql", "fqn": "demo_db.dbt_project.pharma", "artifact_type": "source"}}, "groups": {"dbt": {"demo_dbt": {"models": {"marts": {"__files__": [{"node_id": "model.demo_dbt.dim_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.fact_sales", "resource_type": "model"}, {"node_id": "model.demo_dbt.audit_helper", "resource_type": "model"}]}, "staging": {"__files__": [{"node_id": "model.demo_dbt.stg_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales", "resource_type": "model"}, {"node_id": "source.demo_dbt.snowflake.pharma_with_id", "resource_type": "source"}]}, "New_stagging": {"__files__": [{"node_id": "model.demo_dbt.pharma_with_id", "resource_type": "model"}, {"node_id": "source.demo_dbt.snowflake.pharma", "resource_type": "source"}]}}}}, "tags": {"t2": [{"node_id": "model.demo_dbt.dim_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.fact_sales", "resource_type": "model"}, {"node_id": "model.demo_dbt.audit_helper", "resource_type": "model"}], "t1": [{"node_id": "model.demo_dbt.stg_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales", "resource_type": "model"}], "No tags": [{"node_id": "model.demo_dbt.pharma_with_id", "resource_type": "model"}, {"node_id": "source.demo_dbt.snowflake.pharma_with_id", "resource_type": "source"}, {"node_id": "source.demo_dbt.snowflake.pharma", "resource_type": "source"}]}, "owners": {"No owners": [{"node_id": "model.demo_dbt.dim_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_customer", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_product", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_rep", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales_team", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_subchannel", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_channel", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_city", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_country", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_distributor", "resource_type": "model"}, {"node_id": "model.demo_dbt.dim_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_month", "resource_type": "model"}, {"node_id": "model.demo_dbt.fact_sales", "resource_type": "model"}, {"node_id": "model.demo_dbt.stg_sales", "resource_type": "model"}, {"node_id": "model.demo_dbt.pharma_with_id", "resource_type": "model"}, {"node_id": "model.demo_dbt.audit_helper", "resource_type": "model"}, {"node_id": "source.demo_dbt.snowflake.pharma_with_id", "resource_type": "source"}, {"node_id": "source.demo_dbt.snowflake.pharma", "resource_type": "source"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"model.demo_dbt.fact_sales": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_customer_id__customer_id__ref_dim_customer_.213b30044f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_customer_id__customer_id__ref_dim_customer_.213b30044f.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "customer_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_distributor_id__distributor_id__ref_dim_distributor_.dd595e5729", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_distributor_id__distributor_id__ref_dim_distributor_.dd595e5729.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "distributor_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    distributor_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and distributor_id is not null\n        \n),\n\nparent as (\n    select\n        distributor_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.distributor_id = child.distributor_id\n\n    where parent.distributor_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_distributor')", "pk_column_name": "distributor_id", "column_name": "distributor_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    distributor_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and distributor_id is not null\n        \n),\n\nparent as (\n    select\n        distributor_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.distributor_id = child.distributor_id\n\n    where parent.distributor_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_distributor')", "pk_column_name": "distributor_id", "column_name": "distributor_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_month_id__month_id__ref_dim_month_.9447063a7f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_month_id__month_id__ref_dim_month_.9447063a7f.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "month_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_product_id__product_id__ref_dim_product_.1f93d9e5fe", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_product_id__product_id__ref_dim_product_.1f93d9e5fe.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "product_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_sales_rep_id__sales_rep_id__ref_dim_sales_rep_.53b1de629e", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_sales_rep_id__sales_rep_id__ref_dim_sales_rep_.53b1de629e.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "sales_rep_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_subchannel_id__subchannel_id__ref_dim_subchannel_.63fb158802", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_subchannel_id__subchannel_id__ref_dim_subchannel_.63fb158802.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "subchannel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_city": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_city_country_id__country_id__ref_stg_country_.702b56c331", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_city_country_id__country_id__ref_stg_country_.702b56c331.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "country_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    country_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_city\n  where 1=1\n        and country_id is not null\n        \n),\n\nparent as (\n    select\n        country_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.country_id = child.country_id\n\n    where parent.country_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_country')", "pk_column_name": "country_id", "column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    country_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_city\n  where 1=1\n        and country_id is not null\n        \n),\n\nparent as (\n    select\n        country_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.country_id = child.country_id\n\n    where parent.country_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_country')", "pk_column_name": "country_id", "column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_city_city_id.601d97290c", "elementary_unique_id": "test.demo_dbt.not_null_stg_city_city_id.601d97290c.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "city_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_city_city_id.5a29181bca", "elementary_unique_id": "test.demo_dbt.unique_stg_city_city_id.5a29181bca.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "city_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_sales": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_customer_id__customer_id__ref_stg_customer_.da942a99ea", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_customer_id__customer_id__ref_stg_customer_.da942a99ea.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "customer_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_month_id__month_id__ref_stg_month_.de761303e6", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_month_id__month_id__ref_stg_month_.de761303e6.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "month_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_product_id__product_id__ref_stg_product_.58372dd793", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_product_id__product_id__ref_stg_product_.58372dd793.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "product_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_sales_rep_id__sales_rep_id__ref_stg_sales_rep_.2df90de2f9", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_sales_rep_id__sales_rep_id__ref_stg_sales_rep_.2df90de2f9.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "sales_rep_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_subchannel_id__subchannel_id__ref_stg_subchannel_.2a885e16ad", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_subchannel_id__subchannel_id__ref_stg_subchannel_.2a885e16ad.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "subchannel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_sales_rep": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_rep_sales_team_id__sales_team_id__ref_stg_sales_team_.43d829edf7", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_rep_sales_team_id__sales_team_id__ref_stg_sales_team_.43d829edf7.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_team_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_team_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n  where 1=1\n        and sales_team_id is not null\n        \n),\n\nparent as (\n    select\n        sales_team_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_team_id = child.sales_team_id\n\n    where parent.sales_team_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_sales_team')", "pk_column_name": "sales_team_id", "column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_team_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n  where 1=1\n        and sales_team_id is not null\n        \n),\n\nparent as (\n    select\n        sales_team_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_team_id = child.sales_team_id\n\n    where parent.sales_team_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_sales_team')", "pk_column_name": "sales_team_id", "column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_rep_sales_rep_id.b3a941b9dc", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_rep_sales_rep_id.b3a941b9dc.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_sales_rep_sales_rep_id.da62675640", "elementary_unique_id": "test.demo_dbt.not_null_stg_sales_rep_sales_rep_id.da62675640.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_sales_rep_sales_rep_id.97c709b57e", "elementary_unique_id": "test.demo_dbt.unique_stg_sales_rep_sales_rep_id.97c709b57e.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_subchannel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_subchannel_channel_id__channel_id__ref_stg_channel_.9fa3122844", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_subchannel_channel_id__channel_id__ref_stg_channel_.9fa3122844.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "channel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    channel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n  where 1=1\n        and channel_id is not null\n        \n),\n\nparent as (\n    select\n        channel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.channel_id = child.channel_id\n\n    where parent.channel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_channel')", "pk_column_name": "channel_id", "column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    channel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n  where 1=1\n        and channel_id is not null\n        \n),\n\nparent as (\n    select\n        channel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.channel_id = child.channel_id\n\n    where parent.channel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_channel')", "pk_column_name": "channel_id", "column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_results": {"display_name": "foreign_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_subchannel_subchannel_id.aa84a6f021", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_subchannel_subchannel_id.aa84a6f021.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_subchannel_subchannel_id.4213764545", "elementary_unique_id": "test.demo_dbt.not_null_stg_subchannel_subchannel_id.4213764545.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_subchannel_subchannel_id.bb26359c66", "elementary_unique_id": "test.demo_dbt.unique_stg_subchannel_subchannel_id.bb26359c66.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_channel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_channel_channel_id.38d080cf30", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_channel_channel_id.38d080cf30.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_channel_channel_id.8ff470de59", "elementary_unique_id": "test.demo_dbt.not_null_dim_channel_channel_id.8ff470de59.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_channel_channel_id.7b2ed37764", "elementary_unique_id": "test.demo_dbt.unique_dim_channel_channel_id.7b2ed37764.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_country": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_country_country_id.96ac146c37", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_country_country_id.96ac146c37.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_country_country_id.1774877d7f", "elementary_unique_id": "test.demo_dbt.not_null_dim_country_country_id.1774877d7f.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_country_country_id.b69fbf8eb3", "elementary_unique_id": "test.demo_dbt.unique_dim_country_country_id.b69fbf8eb3.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_customer": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_customer_customer_id.8db0698dde", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_customer_customer_id.8db0698dde.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_customer_customer_id.9775012dfc", "elementary_unique_id": "test.demo_dbt.not_null_dim_customer_customer_id.9775012dfc.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_customer_customer_id.b42affccd1", "elementary_unique_id": "test.demo_dbt.unique_dim_customer_customer_id.b42affccd1.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_distributor": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_distributor_distributor_id.5e56cf8183", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_distributor_distributor_id.5e56cf8183.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_distributor_distributor_id.ffd4e3174a", "elementary_unique_id": "test.demo_dbt.not_null_dim_distributor_distributor_id.ffd4e3174a.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_distributor_distributor_id.2a964bd337", "elementary_unique_id": "test.demo_dbt.unique_dim_distributor_distributor_id.2a964bd337.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_month": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_month_month_id.72da9ff663", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_month_month_id.72da9ff663.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_month_month_id.59f131671e", "elementary_unique_id": "test.demo_dbt.not_null_dim_month_month_id.59f131671e.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_month_month_id.897c087215", "elementary_unique_id": "test.demo_dbt.unique_dim_month_month_id.897c087215.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_product": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_product_product_id.ac83eb1fa9", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_product_product_id.ac83eb1fa9.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        product_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n    group by product_id\n    having count(*) > 1\n        or product_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        product_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n    group by product_id\n    having count(*) > 1\n        or product_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_product_product_id.02b1f06816", "elementary_unique_id": "test.demo_dbt.not_null_dim_product_product_id.02b1f06816.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_product_product_id.46495bf7fe", "elementary_unique_id": "test.demo_dbt.unique_dim_product_product_id.46495bf7fe.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_sales_rep": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_rep_sales_rep_id.e383236f6a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_rep_sales_rep_id.e383236f6a.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_sales_rep_sales_rep_id.403a9f56b3", "elementary_unique_id": "test.demo_dbt.not_null_dim_sales_rep_sales_rep_id.403a9f56b3.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_sales_rep_sales_rep_id.d7c169d6a2", "elementary_unique_id": "test.demo_dbt.unique_dim_sales_rep_sales_rep_id.d7c169d6a2.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_sales_team": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_team_sales_team_id.bb5947513e", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_team_sales_team_id.bb5947513e.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_sales_team_sales_team_id.3d751c3feb", "elementary_unique_id": "test.demo_dbt.not_null_dim_sales_team_sales_team_id.3d751c3feb.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_sales_team_sales_team_id.a373b25276", "elementary_unique_id": "test.demo_dbt.unique_dim_sales_team_sales_team_id.a373b25276.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_subchannel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_subchannel_subchannel_id.cc7f697883", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_subchannel_subchannel_id.cc7f697883.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_subchannel_subchannel_id.994f07a6e1", "elementary_unique_id": "test.demo_dbt.not_null_dim_subchannel_subchannel_id.994f07a6e1.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_subchannel_subchannel_id.91790854ed", "elementary_unique_id": "test.demo_dbt.unique_dim_subchannel_subchannel_id.91790854ed.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_channel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_channel_channel_id.138f544d4c", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_channel_channel_id.138f544d4c.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_channel_channel_id.646c33d6ca", "elementary_unique_id": "test.demo_dbt.not_null_stg_channel_channel_id.646c33d6ca.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_channel_channel_id.d98f658521", "elementary_unique_id": "test.demo_dbt.unique_stg_channel_channel_id.d98f658521.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_country": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_country_country_id.88205c0eda", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_country_country_id.88205c0eda.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_country_country_id.0103d66202", "elementary_unique_id": "test.demo_dbt.not_null_stg_country_country_id.0103d66202.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_country_country_id.693576b924", "elementary_unique_id": "test.demo_dbt.unique_stg_country_country_id.693576b924.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_customer": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_customer_customer_id.378597250a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_customer_customer_id.378597250a.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_customer_customer_id.4721d3b88d", "elementary_unique_id": "test.demo_dbt.not_null_stg_customer_customer_id.4721d3b88d.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_customer_customer_id.310773d0ea", "elementary_unique_id": "test.demo_dbt.unique_stg_customer_customer_id.310773d0ea.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_distributor": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_distributor_distributor_id.d565acbec8", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_distributor_distributor_id.d565acbec8.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_distributor_distributor_id.fe2e278765", "elementary_unique_id": "test.demo_dbt.not_null_stg_distributor_distributor_id.fe2e278765.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_distributor_distributor_id.e75fea13ca", "elementary_unique_id": "test.demo_dbt.unique_stg_distributor_distributor_id.e75fea13ca.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_month": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_month_month_id.6d097fe91a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_month_month_id.6d097fe91a.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_month_month_id.ff93dd6ca4", "elementary_unique_id": "test.demo_dbt.not_null_stg_month_month_id.ff93dd6ca4.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_month_month_id.d278f4ecf5", "elementary_unique_id": "test.demo_dbt.unique_stg_month_month_id.d278f4ecf5.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_sales_team": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_team_sales_team_id.321993f10f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_team_sales_team_id.321993f10f.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_results": {"display_name": "primary_key", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_sales_team_sales_team_id.f6942390fa", "elementary_unique_id": "test.demo_dbt.not_null_stg_sales_team_sales_team_id.f6942390fa.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_sales_team_sales_team_id.88e38f7926", "elementary_unique_id": "test.demo_dbt.unique_stg_sales_team_sales_team_id.88e38f7926.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.dim_city": [{"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_city_city_id.20fd94753a", "elementary_unique_id": "test.demo_dbt.not_null_dim_city_city_id.20fd94753a.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_city", "column_name": "city_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_city", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_city_city_id.27ca620bdd", "elementary_unique_id": "test.demo_dbt.unique_dim_city_city_id.27ca620bdd.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_city", "column_name": "city_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_city", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.demo_dbt.stg_product": [{"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_product_product_id.5e35fa3f95", "elementary_unique_id": "test.demo_dbt.not_null_stg_product_product_id.5e35fa3f95.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_product", "column_name": "product_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_product", "table_unique_id": "demo_db.dbt_project_staging.stg_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_product_product_id.fd1037e514", "elementary_unique_id": "test.demo_dbt.unique_stg_product_product_id.fd1037e514.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_product", "column_name": "product_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_product", "table_unique_id": "demo_db.dbt_project_staging.stg_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.demo_dbt.fact_sales": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "model.demo_dbt.stg_city": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_sales": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.demo_dbt.stg_sales_rep": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.demo_dbt.stg_subchannel": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.demo_dbt.dim_channel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_country": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_customer": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_distributor": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_month": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_product": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_sales_rep": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_sales_team": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_subchannel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_channel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_country": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_customer": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_distributor": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_month": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_sales_team": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_city": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_product": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "test_runs": {"model.demo_dbt.fact_sales": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_customer_id__customer_id__ref_dim_customer_.213b30044f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_customer_id__customer_id__ref_dim_customer_.213b30044f.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "customer_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_distributor_id__distributor_id__ref_dim_distributor_.dd595e5729", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_distributor_id__distributor_id__ref_dim_distributor_.dd595e5729.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "distributor_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    distributor_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and distributor_id is not null\n        \n),\n\nparent as (\n    select\n        distributor_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.distributor_id = child.distributor_id\n\n    where parent.distributor_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_distributor')", "pk_column_name": "distributor_id", "column_name": "distributor_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    distributor_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and distributor_id is not null\n        \n),\n\nparent as (\n    select\n        distributor_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.distributor_id = child.distributor_id\n\n    where parent.distributor_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_distributor')", "pk_column_name": "distributor_id", "column_name": "distributor_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_month_id__month_id__ref_dim_month_.9447063a7f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_month_id__month_id__ref_dim_month_.9447063a7f.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "month_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_product_id__product_id__ref_dim_product_.1f93d9e5fe", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_product_id__product_id__ref_dim_product_.1f93d9e5fe.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "product_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_sales_rep_id__sales_rep_id__ref_dim_sales_rep_.53b1de629e", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_sales_rep_id__sales_rep_id__ref_dim_sales_rep_.53b1de629e.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "sales_rep_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_subchannel_id__subchannel_id__ref_dim_subchannel_.63fb158802", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_fact_sales_subchannel_id__subchannel_id__ref_dim_subchannel_.63fb158802.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "fact_sales", "column_name": "subchannel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.fact_sales", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.fact_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('dim_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_pharma_fact_dim.fact_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('dim_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('fact_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_city": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_city_country_id__country_id__ref_stg_country_.702b56c331", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_city_country_id__country_id__ref_stg_country_.702b56c331.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "country_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    country_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_city\n  where 1=1\n        and country_id is not null\n        \n),\n\nparent as (\n    select\n        country_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.country_id = child.country_id\n\n    where parent.country_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_country')", "pk_column_name": "country_id", "column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    country_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_city\n  where 1=1\n        and country_id is not null\n        \n),\n\nparent as (\n    select\n        country_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.country_id = child.country_id\n\n    where parent.country_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_country')", "pk_column_name": "country_id", "column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_city_city_id.601d97290c", "elementary_unique_id": "test.demo_dbt.not_null_stg_city_city_id.601d97290c.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "city_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_city_city_id.5a29181bca", "elementary_unique_id": "test.demo_dbt.unique_stg_city_city_id.5a29181bca.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_city", "column_name": "city_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_city", "table_unique_id": "demo_db.dbt_project_staging.stg_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('stg_city')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_sales": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_customer_id__customer_id__ref_stg_customer_.da942a99ea", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_customer_id__customer_id__ref_stg_customer_.da942a99ea.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "customer_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    customer_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and customer_id is not null\n        \n),\n\nparent as (\n    select\n        customer_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.customer_id = child.customer_id\n\n    where parent.customer_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_customer')", "pk_column_name": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_month_id__month_id__ref_stg_month_.de761303e6", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_month_id__month_id__ref_stg_month_.de761303e6.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "month_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    month_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and month_id is not null\n        \n),\n\nparent as (\n    select\n        month_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.month_id = child.month_id\n\n    where parent.month_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_month')", "pk_column_name": "month_id", "column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_product_id__product_id__ref_stg_product_.58372dd793", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_product_id__product_id__ref_stg_product_.58372dd793.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "product_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    product_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and product_id is not null\n        \n),\n\nparent as (\n    select\n        product_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_product\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.product_id = child.product_id\n\n    where parent.product_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_product')", "pk_column_name": "product_id", "column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_sales_rep_id__sales_rep_id__ref_stg_sales_rep_.2df90de2f9", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_sales_rep_id__sales_rep_id__ref_stg_sales_rep_.2df90de2f9.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "sales_rep_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_rep_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and sales_rep_id is not null\n        \n),\n\nparent as (\n    select\n        sales_rep_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_rep_id = child.sales_rep_id\n\n    where parent.sales_rep_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_sales_rep')", "pk_column_name": "sales_rep_id", "column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_subchannel_id__subchannel_id__ref_stg_subchannel_.2a885e16ad", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_subchannel_id__subchannel_id__ref_stg_subchannel_.2a885e16ad.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales", "column_name": "subchannel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales", "table_unique_id": "demo_db.dbt_project_staging.stg_sales", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    subchannel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales\n  where 1=1\n        and subchannel_id is not null\n        \n),\n\nparent as (\n    select\n        subchannel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.subchannel_id = child.subchannel_id\n\n    where parent.subchannel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_subchannel')", "pk_column_name": "subchannel_id", "column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_sales')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_sales_rep": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_rep_sales_team_id__sales_team_id__ref_stg_sales_team_.43d829edf7", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_sales_rep_sales_team_id__sales_team_id__ref_stg_sales_team_.43d829edf7.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_team_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    sales_team_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n  where 1=1\n        and sales_team_id is not null\n        \n),\n\nparent as (\n    select\n        sales_team_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_team_id = child.sales_team_id\n\n    where parent.sales_team_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_sales_team')", "pk_column_name": "sales_team_id", "column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    sales_team_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n  where 1=1\n        and sales_team_id is not null\n        \n),\n\nparent as (\n    select\n        sales_team_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.sales_team_id = child.sales_team_id\n\n    where parent.sales_team_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_sales_team')", "pk_column_name": "sales_team_id", "column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_rep_sales_rep_id.b3a941b9dc", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_rep_sales_rep_id.b3a941b9dc.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_sales_rep_sales_rep_id.da62675640", "elementary_unique_id": "test.demo_dbt.not_null_stg_sales_rep_sales_rep_id.da62675640.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_sales_rep_sales_rep_id.97c709b57e", "elementary_unique_id": "test.demo_dbt.unique_stg_sales_rep_sales_rep_id.97c709b57e.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_rep", "column_name": "sales_rep_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_rep", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('stg_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_subchannel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_subchannel_channel_id__channel_id__ref_stg_channel_.9fa3122844", "elementary_unique_id": "test.demo_dbt.dbt_constraints_foreign_key_stg_subchannel_channel_id__channel_id__ref_stg_channel_.9fa3122844.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "channel_id", "test_name": "foreign_key", "test_display_name": "Foreign Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n  select\n    channel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n  where 1=1\n        and channel_id is not null\n        \n),\n\nparent as (\n    select\n        channel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.channel_id = child.channel_id\n\n    where parent.channel_id is null\n)\n\nselect *\nfrom validation_errors", "test_params": {"pk_table_name": "ref('stg_channel')", "pk_column_name": "channel_id", "column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with child as (\n  select\n    channel_id\n  from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n  where 1=1\n        and channel_id is not null\n        \n),\n\nparent as (\n    select\n        channel_id\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.channel_id = child.channel_id\n\n    where parent.channel_id is null\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "foreign_key", "test_params": {"pk_table_name": "ref('stg_channel')", "pk_column_name": "channel_id", "column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_subchannel_subchannel_id.aa84a6f021", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_subchannel_subchannel_id.aa84a6f021.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_subchannel_subchannel_id.4213764545", "elementary_unique_id": "test.demo_dbt.not_null_stg_subchannel_subchannel_id.4213764545.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_subchannel_subchannel_id.bb26359c66", "elementary_unique_id": "test.demo_dbt.unique_stg_subchannel_subchannel_id.bb26359c66.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_subchannel", "column_name": "subchannel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_subchannel", "table_unique_id": "demo_db.dbt_project_staging.stg_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('stg_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_channel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_channel_channel_id.38d080cf30", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_channel_channel_id.38d080cf30.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_channel_channel_id.8ff470de59", "elementary_unique_id": "test.demo_dbt.not_null_dim_channel_channel_id.8ff470de59.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_channel_channel_id.7b2ed37764", "elementary_unique_id": "test.demo_dbt.unique_dim_channel_channel_id.7b2ed37764.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_channel", "column_name": "channel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_channel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('dim_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_country": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_country_country_id.96ac146c37", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_country_country_id.96ac146c37.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_country_country_id.1774877d7f", "elementary_unique_id": "test.demo_dbt.not_null_dim_country_country_id.1774877d7f.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_country_country_id.b69fbf8eb3", "elementary_unique_id": "test.demo_dbt.unique_dim_country_country_id.b69fbf8eb3.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_country", "column_name": "country_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_country", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('dim_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_customer": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_customer_customer_id.8db0698dde", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_customer_customer_id.8db0698dde.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_customer_customer_id.9775012dfc", "elementary_unique_id": "test.demo_dbt.not_null_dim_customer_customer_id.9775012dfc.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_customer_customer_id.b42affccd1", "elementary_unique_id": "test.demo_dbt.unique_dim_customer_customer_id.b42affccd1.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_customer", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_customer", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('dim_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_distributor": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_distributor_distributor_id.5e56cf8183", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_distributor_distributor_id.5e56cf8183.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_distributor_distributor_id.ffd4e3174a", "elementary_unique_id": "test.demo_dbt.not_null_dim_distributor_distributor_id.ffd4e3174a.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_distributor_distributor_id.2a964bd337", "elementary_unique_id": "test.demo_dbt.unique_dim_distributor_distributor_id.2a964bd337.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_distributor", "column_name": "distributor_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_distributor", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('dim_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_month": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_month_month_id.72da9ff663", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_month_month_id.72da9ff663.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_month_month_id.59f131671e", "elementary_unique_id": "test.demo_dbt.not_null_dim_month_month_id.59f131671e.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_month_month_id.897c087215", "elementary_unique_id": "test.demo_dbt.unique_dim_month_month_id.897c087215.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_month", "column_name": "month_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_month", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('dim_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_product": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_product_product_id.ac83eb1fa9", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_product_product_id.ac83eb1fa9.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        product_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n    group by product_id\n    having count(*) > 1\n        or product_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        product_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\n    group by product_id\n    having count(*) > 1\n        or product_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_product_product_id.02b1f06816", "elementary_unique_id": "test.demo_dbt.not_null_dim_product_product_id.02b1f06816.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_product_product_id.46495bf7fe", "elementary_unique_id": "test.demo_dbt.unique_dim_product_product_id.46495bf7fe.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_product", "column_name": "product_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_product", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('dim_product')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_sales_rep": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_rep_sales_rep_id.e383236f6a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_rep_sales_rep_id.e383236f6a.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_rep_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\n    group by sales_rep_id\n    having count(*) > 1\n        or sales_rep_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_sales_rep_sales_rep_id.403a9f56b3", "elementary_unique_id": "test.demo_dbt.not_null_dim_sales_rep_sales_rep_id.403a9f56b3.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_rep_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_sales_rep_sales_rep_id.d7c169d6a2", "elementary_unique_id": "test.demo_dbt.unique_dim_sales_rep_sales_rep_id.d7c169d6a2.sales_rep_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_rep", "column_name": "sales_rep_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_rep", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_rep", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_rep_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_rep\nwhere sales_rep_id is not null\ngroup by sales_rep_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_rep_id", "model": "{{ get_where_subquery(ref('dim_sales_rep')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_sales_team": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_team_sales_team_id.bb5947513e", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_sales_team_sales_team_id.bb5947513e.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_sales_team_sales_team_id.3d751c3feb", "elementary_unique_id": "test.demo_dbt.not_null_dim_sales_team_sales_team_id.3d751c3feb.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_sales_team_sales_team_id.a373b25276", "elementary_unique_id": "test.demo_dbt.unique_dim_sales_team_sales_team_id.a373b25276.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_sales_team", "column_name": "sales_team_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_sales_team", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('dim_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_subchannel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_subchannel_subchannel_id.cc7f697883", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_dim_subchannel_subchannel_id.cc7f697883.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        subchannel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\n    group by subchannel_id\n    having count(*) > 1\n        or subchannel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_subchannel_subchannel_id.994f07a6e1", "elementary_unique_id": "test.demo_dbt.not_null_dim_subchannel_subchannel_id.994f07a6e1.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select subchannel_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_subchannel_subchannel_id.91790854ed", "elementary_unique_id": "test.demo_dbt.unique_dim_subchannel_subchannel_id.91790854ed.subchannel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_subchannel", "column_name": "subchannel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_subchannel", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_subchannel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    subchannel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_subchannel\nwhere subchannel_id is not null\ngroup by subchannel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "subchannel_id", "model": "{{ get_where_subquery(ref('dim_subchannel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_channel": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_channel_channel_id.138f544d4c", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_channel_channel_id.138f544d4c.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        channel_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_channel\n    group by channel_id\n    having count(*) > 1\n        or channel_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_channel_channel_id.646c33d6ca", "elementary_unique_id": "test.demo_dbt.not_null_stg_channel_channel_id.646c33d6ca.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select channel_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_channel_channel_id.d98f658521", "elementary_unique_id": "test.demo_dbt.unique_stg_channel_channel_id.d98f658521.channel_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_channel", "column_name": "channel_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_channel", "table_unique_id": "demo_db.dbt_project_staging.stg_channel", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    channel_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_channel\nwhere channel_id is not null\ngroup by channel_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "channel_id", "model": "{{ get_where_subquery(ref('stg_channel')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_country": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_country_country_id.88205c0eda", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_country_country_id.88205c0eda.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        country_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_country\n    group by country_id\n    having count(*) > 1\n        or country_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_country_country_id.0103d66202", "elementary_unique_id": "test.demo_dbt.not_null_stg_country_country_id.0103d66202.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select country_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_country_country_id.693576b924", "elementary_unique_id": "test.demo_dbt.unique_stg_country_country_id.693576b924.country_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_country", "column_name": "country_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_country", "table_unique_id": "demo_db.dbt_project_staging.stg_country", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    country_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_country\nwhere country_id is not null\ngroup by country_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "country_id", "model": "{{ get_where_subquery(ref('stg_country')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_customer": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_customer_customer_id.378597250a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_customer_customer_id.378597250a.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        customer_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_customer\n    group by customer_id\n    having count(*) > 1\n        or customer_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_customer_customer_id.4721d3b88d", "elementary_unique_id": "test.demo_dbt.not_null_stg_customer_customer_id.4721d3b88d.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_customer_customer_id.310773d0ea", "elementary_unique_id": "test.demo_dbt.unique_stg_customer_customer_id.310773d0ea.customer_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_customer", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_customer", "table_unique_id": "demo_db.dbt_project_staging.stg_customer", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_customer\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customer')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_distributor": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_distributor_distributor_id.d565acbec8", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_distributor_distributor_id.d565acbec8.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        distributor_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_distributor\n    group by distributor_id\n    having count(*) > 1\n        or distributor_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_distributor_distributor_id.fe2e278765", "elementary_unique_id": "test.demo_dbt.not_null_stg_distributor_distributor_id.fe2e278765.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select distributor_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_distributor_distributor_id.e75fea13ca", "elementary_unique_id": "test.demo_dbt.unique_stg_distributor_distributor_id.e75fea13ca.distributor_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_distributor", "column_name": "distributor_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_distributor", "table_unique_id": "demo_db.dbt_project_staging.stg_distributor", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    distributor_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_distributor\nwhere distributor_id is not null\ngroup by distributor_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "distributor_id", "model": "{{ get_where_subquery(ref('stg_distributor')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_month": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_month_month_id.6d097fe91a", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_month_month_id.6d097fe91a.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        month_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_month\n    group by month_id\n    having count(*) > 1\n        or month_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_month_month_id.ff93dd6ca4", "elementary_unique_id": "test.demo_dbt.not_null_stg_month_month_id.ff93dd6ca4.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select month_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_month_month_id.d278f4ecf5", "elementary_unique_id": "test.demo_dbt.unique_stg_month_month_id.d278f4ecf5.month_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_month", "column_name": "month_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_month", "table_unique_id": "demo_db.dbt_project_staging.stg_month", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    month_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_month\nwhere month_id is not null\ngroup by month_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "month_id", "model": "{{ get_where_subquery(ref('stg_month')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_sales_team": [{"metadata": {"test_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_team_sales_team_id.321993f10f", "elementary_unique_id": "test.demo_dbt.dbt_constraints_primary_key_stg_sales_team_sales_team_id.321993f10f.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "primary_key", "test_display_name": "Primary Key", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation_errors as (\n    select\n        sales_team_id, count(*) as row_count\n    from DEMO_DB.DBT_PROJECT_staging.stg_sales_team\n    group by sales_team_id\n    having count(*) > 1\n        or sales_team_id is null\n        \n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "primary_key", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_sales_team_sales_team_id.f6942390fa", "elementary_unique_id": "test.demo_dbt.not_null_stg_sales_team_sales_team_id.f6942390fa.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select sales_team_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_sales_team_sales_team_id.88e38f7926", "elementary_unique_id": "test.demo_dbt.unique_stg_sales_team_sales_team_id.88e38f7926.sales_team_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_sales_team", "column_name": "sales_team_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_sales_team", "table_unique_id": "demo_db.dbt_project_staging.stg_sales_team", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    sales_team_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_sales_team\nwhere sales_team_id is not null\ngroup by sales_team_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "sales_team_id", "model": "{{ get_where_subquery(ref('stg_sales_team')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.dim_city": [{"metadata": {"test_unique_id": "test.demo_dbt.not_null_dim_city_city_id.20fd94753a", "elementary_unique_id": "test.demo_dbt.not_null_dim_city_city_id.20fd94753a.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_city", "column_name": "city_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:35+05:30", "latest_run_time_utc": "2023-10-18T06:01:35+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_city", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select city_id\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:35+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_dim_city_city_id.27ca620bdd", "elementary_unique_id": "test.demo_dbt.unique_dim_city_city_id.27ca620bdd.city_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_pharma_fact_dim", "table_name": "dim_city", "column_name": "city_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.dim_city", "table_unique_id": "demo_db.dbt_project_pharma_fact_dim.dim_city", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_pharma_fact_dim.dim_city\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "city_id", "model": "{{ get_where_subquery(ref('dim_city')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.demo_dbt.stg_product": [{"metadata": {"test_unique_id": "test.demo_dbt.not_null_stg_product_product_id.5e35fa3f95", "elementary_unique_id": "test.demo_dbt.not_null_stg_product_product_id.5e35fa3f95.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_product", "column_name": "product_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_product", "table_unique_id": "demo_db.dbt_project_staging.stg_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select product_id\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.demo_dbt.unique_stg_product_product_id.fd1037e514", "elementary_unique_id": "test.demo_dbt.unique_stg_product_product_id.fd1037e514.product_id.generic", "database_name": "DEMO_DB", "schema_name": "DBT_PROJECT_staging", "table_name": "stg_product", "column_name": "product_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-18T11:31:36+05:30", "latest_run_time_utc": "2023-10-18T06:01:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.demo_dbt.stg_product", "table_unique_id": "demo_db.dbt_project_staging.stg_product", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_PROJECT_staging.stg_product\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_product')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-18T06:01:36+00:00", "id": "e4543789-400c-4231-b6d1-766872b72347", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}]}, "test_runs_totals": {"model.demo_dbt.fact_sales": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "model.demo_dbt.stg_city": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_sales": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.demo_dbt.stg_sales_rep": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.demo_dbt.stg_subchannel": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.demo_dbt.dim_channel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_country": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_customer": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_distributor": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_month": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_product": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_sales_rep": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_sales_team": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_subchannel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_channel": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_country": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_customer": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_distributor": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_month": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_sales_team": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.dim_city": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_product": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "coverages": {"model.demo_dbt.dim_customer": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_product": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_sales_rep": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_sales_team": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_city": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_customer": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_product": {"table_tests": 0, "column_tests": 2}, "model.demo_dbt.stg_sales_team": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_subchannel": {"table_tests": 0, "column_tests": 4}, "model.demo_dbt.stg_month": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_sales": {"table_tests": 0, "column_tests": 5}, "model.demo_dbt.dim_channel": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_subchannel": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_city": {"table_tests": 0, "column_tests": 2}, "model.demo_dbt.dim_country": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_distributor": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.fact_sales": {"table_tests": 0, "column_tests": 6}, "model.demo_dbt.stg_distributor": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.dim_month": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_sales_rep": {"table_tests": 0, "column_tests": 4}, "model.demo_dbt.stg_channel": {"table_tests": 0, "column_tests": 3}, "model.demo_dbt.stg_country": {"table_tests": 0, "column_tests": 3}}, "model_runs": [{"unique_id": "model.demo_dbt.stg_product", "schema": "DBT_PROJECT_staging", "name": "stg_product", "status": "success", "last_exec_time": 3.0, "median_exec_time": 4.3, "exec_time_change_rate": -30.23255813953488, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 5.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 3.0}]}, {"unique_id": "model.demo_dbt.stg_subchannel", "schema": "DBT_PROJECT_staging", "name": "stg_subchannel", "status": "success", "last_exec_time": 2.9, "median_exec_time": 4.25, "exec_time_change_rate": -31.76470588235294, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 5.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.9}]}, {"unique_id": "model.demo_dbt.stg_city", "schema": "DBT_PROJECT_staging", "name": "stg_city", "status": "success", "last_exec_time": 3.2, "median_exec_time": 4.5, "exec_time_change_rate": -28.888888888888886, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 5.8}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 3.2}]}, {"unique_id": "model.demo_dbt.stg_sales_rep", "schema": "DBT_PROJECT_staging", "name": "stg_sales_rep", "status": "success", "last_exec_time": 3.2, "median_exec_time": 4.550000000000001, "exec_time_change_rate": -29.670329670329675, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 5.9}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 3.2}]}, {"unique_id": "model.demo_dbt.stg_sales_team", "schema": "DBT_PROJECT_staging", "name": "stg_sales_team", "status": "success", "last_exec_time": 3.2, "median_exec_time": 4.6, "exec_time_change_rate": -30.43478260869564, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 6.0}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 3.2}]}, {"unique_id": "model.demo_dbt.dim_sales_team", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_sales_team", "status": "success", "last_exec_time": 4.5, "median_exec_time": 4.25, "exec_time_change_rate": 5.882352941176472, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.0}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.5}]}, {"unique_id": "model.demo_dbt.dim_sales_rep", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_sales_rep", "status": "success", "last_exec_time": 4.5, "median_exec_time": 4.3, "exec_time_change_rate": 4.651162790697683, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.1}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.5}]}, {"unique_id": "model.demo_dbt.dim_product", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_product", "status": "success", "last_exec_time": 3.6, "median_exec_time": 4.1, "exec_time_change_rate": -12.195121951219502, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.6}]}, {"unique_id": "model.demo_dbt.dim_customer", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_customer", "status": "success", "last_exec_time": 4.5, "median_exec_time": 4.45, "exec_time_change_rate": 1.1235955056179803, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.4}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 4.5}]}, {"unique_id": "model.demo_dbt.stg_customer", "schema": "DBT_PROJECT_staging", "name": "stg_customer", "status": "success", "last_exec_time": 3.0, "median_exec_time": 4.3, "exec_time_change_rate": -30.23255813953488, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:45+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 5.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 3.0}]}, {"unique_id": "model.demo_dbt.dim_distributor", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_distributor", "status": "success", "last_exec_time": 1.9, "median_exec_time": 2.65, "exec_time_change_rate": -28.301886792452834, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.4}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.9}]}, {"unique_id": "model.demo_dbt.fact_sales", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "fact_sales", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.3, "exec_time_change_rate": -13.043478260869556, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.0}]}, {"unique_id": "model.demo_dbt.dim_city", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_city", "status": "success", "last_exec_time": 2.3, "median_exec_time": 3.0, "exec_time_change_rate": -23.33333333333334, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.7}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.3}]}, {"unique_id": "model.demo_dbt.dim_subchannel", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_subchannel", "status": "success", "last_exec_time": 2.1, "median_exec_time": 2.9000000000000004, "exec_time_change_rate": -27.586206896551737, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.7}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.1}]}, {"unique_id": "model.demo_dbt.dim_month", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_month", "status": "success", "last_exec_time": 1.9, "median_exec_time": 2.65, "exec_time_change_rate": -28.301886792452834, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.4}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.9}]}, {"unique_id": "model.demo_dbt.dim_country", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_country", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.75, "exec_time_change_rate": -27.27272727272727, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.5}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.0}]}, {"unique_id": "model.demo_dbt.stg_sales", "schema": "DBT_PROJECT_staging", "name": "stg_sales", "status": "success", "last_exec_time": 2.5, "median_exec_time": 3.0, "exec_time_change_rate": -16.666666666666664, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.5}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 2.5}]}, {"unique_id": "model.demo_dbt.pharma_with_id", "schema": "DBT_PROJECT", "name": "pharma_with_id", "status": "success", "last_exec_time": 16.7, "median_exec_time": 16.7, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 18.8}, {"id": "9838a873-4fca-4b99-b1c6-1ef2f5625644", "time_utc": "2023-10-18T06:06:07+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 13.4}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 16.7}]}, {"unique_id": "model.demo_dbt.stg_channel", "schema": "DBT_PROJECT_staging", "name": "stg_channel", "status": "success", "last_exec_time": 1.2, "median_exec_time": 1.4, "exec_time_change_rate": -14.28571428571428, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.6}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.2}]}, {"unique_id": "model.demo_dbt.stg_country", "schema": "DBT_PROJECT_staging", "name": "stg_country", "status": "success", "last_exec_time": 1.1, "median_exec_time": 1.4, "exec_time_change_rate": -21.42857142857142, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.7}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.1}]}, {"unique_id": "model.demo_dbt.stg_distributor", "schema": "DBT_PROJECT_staging", "name": "stg_distributor", "status": "success", "last_exec_time": 1.1, "median_exec_time": 1.5, "exec_time_change_rate": -26.66666666666666, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.1}]}, {"unique_id": "model.demo_dbt.stg_month", "schema": "DBT_PROJECT_staging", "name": "stg_month", "status": "success", "last_exec_time": 1.2, "median_exec_time": 1.5499999999999998, "exec_time_change_rate": -22.580645161290313, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.2}]}, {"unique_id": "model.demo_dbt.dim_channel", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "dim_channel", "status": "success", "last_exec_time": 1.9, "median_exec_time": 2.65, "exec_time_change_rate": -28.301886792452834, "totals": {"errors": 0, "success": 2}, "runs": [{"id": "8b8070dd-b83f-4690-954d-cd97700aeccc", "time_utc": "2023-10-18T06:00:46+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.4}, {"id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "time_utc": "2023-10-19T06:36:17+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.9}]}, {"unique_id": "model.demo_dbt.audit_helper", "schema": "DBT_PROJECT_pharma_fact_dim", "name": "audit_helper", "status": "success", "last_exec_time": 3.5, "median_exec_time": 3.5, "exec_time_change_rate": 0.0, "totals": {"errors": 5, "success": 1}, "runs": [{"id": "7604cc81-9a09-48c3-9215-49b4d8d06900", "time_utc": "2023-10-19T07:07:01+00:00", "status": "error", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "5eb79236-7e92-4ca2-8ca7-0c7cd72a343f", "time_utc": "2023-10-19T07:08:59+00:00", "status": "error", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "6a784db5-7c03-4fe5-a7d4-0236bb22c20a", "time_utc": "2023-10-19T07:10:20+00:00", "status": "error", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "f00d5fe6-df09-47b8-9594-fd2c89e22467", "time_utc": "2023-10-19T07:11:21+00:00", "status": "error", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "861061a9-6682-4d6a-8d37-1ba035733fbe", "time_utc": "2023-10-19T07:12:41+00:00", "status": "error", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "7d9529d3-7cea-454d-a160-231f2f7ac4ee", "time_utc": "2023-10-19T07:14:15+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.5}]}], "model_runs_totals": {"model.demo_dbt.stg_product": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_subchannel": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_city": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_sales_rep": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_sales_team": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_sales_team": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_sales_rep": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_product": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_customer": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_customer": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_distributor": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.fact_sales": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_city": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_subchannel": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_month": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_country": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_sales": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.pharma_with_id": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.demo_dbt.stg_channel": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_country": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_distributor": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.stg_month": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.dim_channel": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.demo_dbt.audit_helper": {"errors": 5, "warnings": 0, "passed": 1, "failures": 0}}, "filters": {"test_results": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.demo_dbt.dim_month", "model.demo_dbt.stg_subchannel", "model.demo_dbt.dim_channel", "model.demo_dbt.stg_sales", "model.demo_dbt.dim_sales_team", "model.demo_dbt.stg_channel", "model.demo_dbt.dim_customer", "model.demo_dbt.stg_city", "model.demo_dbt.dim_subchannel", "model.demo_dbt.stg_distributor", "model.demo_dbt.dim_distributor", "model.demo_dbt.fact_sales", "model.demo_dbt.stg_sales_rep", "model.demo_dbt.stg_country", "model.demo_dbt.stg_customer", "model.demo_dbt.stg_product", "model.demo_dbt.dim_sales_rep", "model.demo_dbt.stg_month", "model.demo_dbt.dim_city", "model.demo_dbt.dim_country", "model.demo_dbt.dim_product", "model.demo_dbt.stg_sales_team"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.demo_dbt.pharma_with_id", "source.demo_dbt.snowflake.pharma_with_id", "model.demo_dbt.audit_helper", "source.demo_dbt.snowflake.pharma"]}], "test_runs": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.demo_dbt.dim_month", "model.demo_dbt.stg_subchannel", "model.demo_dbt.dim_channel", "model.demo_dbt.stg_sales", "model.demo_dbt.dim_sales_team", "model.demo_dbt.stg_channel", "model.demo_dbt.dim_customer", "model.demo_dbt.stg_city", "model.demo_dbt.dim_subchannel", "model.demo_dbt.stg_distributor", "model.demo_dbt.dim_distributor", "model.demo_dbt.fact_sales", "model.demo_dbt.stg_sales_rep", "model.demo_dbt.stg_country", "model.demo_dbt.stg_customer", "model.demo_dbt.stg_product", "model.demo_dbt.dim_sales_rep", "model.demo_dbt.stg_month", "model.demo_dbt.dim_city", "model.demo_dbt.dim_country", "model.demo_dbt.dim_product", "model.demo_dbt.stg_sales_team"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.demo_dbt.pharma_with_id", "source.demo_dbt.snowflake.pharma_with_id", "model.demo_dbt.audit_helper", "source.demo_dbt.snowflake.pharma"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.demo_dbt.pharma_with_id", "model.demo_dbt.dim_month", "model.demo_dbt.stg_subchannel", "model.demo_dbt.dim_channel", "model.demo_dbt.stg_sales", "model.demo_dbt.audit_helper", "model.demo_dbt.dim_sales_team", "model.demo_dbt.stg_channel", "model.demo_dbt.dim_customer", "model.demo_dbt.stg_city", "model.demo_dbt.dim_subchannel", "model.demo_dbt.stg_distributor", "model.demo_dbt.dim_distributor", "model.demo_dbt.fact_sales", "model.demo_dbt.stg_sales_rep", "model.demo_dbt.stg_country", "model.demo_dbt.stg_customer", "model.demo_dbt.stg_product", "model.demo_dbt.dim_sales_rep", "model.demo_dbt.stg_month", "model.demo_dbt.dim_city", "model.demo_dbt.dim_country", "model.demo_dbt.dim_product", "model.demo_dbt.stg_sales_team"]}, {"name": "errors", "display_name": "Failed Runs", "model_unique_ids": ["model.demo_dbt.audit_helper"]}]}, "lineage": {"nodes": [{"id": "model.demo_dbt.dim_customer", "type": "model"}, {"id": "model.demo_dbt.dim_product", "type": "model"}, {"id": "model.demo_dbt.dim_sales_rep", "type": "model"}, {"id": "model.demo_dbt.dim_sales_team", "type": "model"}, {"id": "model.demo_dbt.stg_city", "type": "model"}, {"id": "model.demo_dbt.stg_customer", "type": "model"}, {"id": "model.demo_dbt.stg_product", "type": "model"}, {"id": "model.demo_dbt.stg_sales_rep", "type": "model"}, {"id": "model.demo_dbt.stg_sales_team", "type": "model"}, {"id": "model.demo_dbt.stg_subchannel", "type": "model"}, {"id": "model.demo_dbt.dim_channel", "type": "model"}, {"id": "model.demo_dbt.dim_subchannel", "type": "model"}, {"id": "model.demo_dbt.stg_channel", "type": "model"}, {"id": "model.demo_dbt.dim_city", "type": "model"}, {"id": "model.demo_dbt.dim_country", "type": "model"}, {"id": "model.demo_dbt.stg_country", "type": "model"}, {"id": "model.demo_dbt.dim_distributor", "type": "model"}, {"id": "model.demo_dbt.stg_distributor", "type": "model"}, {"id": "model.demo_dbt.dim_month", "type": "model"}, {"id": "model.demo_dbt.stg_month", "type": "model"}, {"id": "model.demo_dbt.fact_sales", "type": "model"}, {"id": "model.demo_dbt.stg_sales", "type": "model"}, {"id": "model.demo_dbt.pharma_with_id", "type": "model"}, {"id": "model.demo_dbt.audit_helper", "type": "model"}, {"id": "source.demo_dbt.snowflake.pharma_with_id", "type": "source"}, {"id": "source.demo_dbt.snowflake.pharma", "type": "source"}], "edges": [["model.demo_dbt.dim_customer", "model.demo_dbt.stg_city"], ["model.demo_dbt.dim_customer", "model.demo_dbt.stg_customer"], ["model.demo_dbt.stg_city", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.stg_customer", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.dim_product", "model.demo_dbt.stg_product"], ["model.demo_dbt.stg_product", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.dim_sales_rep", "model.demo_dbt.stg_sales_rep"], ["model.demo_dbt.dim_sales_rep", "model.demo_dbt.stg_sales_team"], ["model.demo_dbt.stg_sales_rep", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.stg_sales_team", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.dim_sales_team", "model.demo_dbt.stg_sales_team"], ["model.demo_dbt.stg_subchannel", "source.demo_dbt.snowflake.pharma_with_id"], ["model.demo_dbt.dim_channel", "model.demo_dbt.stg_channel"], ["model.demo_dbt.stg_channel", "model.demo_dbt.pharma_with_id"], ["model.demo_dbt.dim_subchannel", "model.demo_dbt.stg_channel"], ["model.demo_dbt.dim_subchannel", "model.demo_dbt.stg_subchannel"], ["model.demo_dbt.pharma_with_id", "source.demo_dbt.snowflake.pharma"], ["model.demo_dbt.dim_city", "model.demo_dbt.stg_city"], ["model.demo_dbt.dim_city", "model.demo_dbt.stg_country"], ["model.demo_dbt.stg_country", "model.demo_dbt.pharma_with_id"], ["model.demo_dbt.dim_country", "model.demo_dbt.stg_country"], ["model.demo_dbt.dim_distributor", "model.demo_dbt.stg_distributor"], ["model.demo_dbt.stg_distributor", "model.demo_dbt.pharma_with_id"], ["model.demo_dbt.dim_month", "model.demo_dbt.stg_month"], ["model.demo_dbt.stg_month", "model.demo_dbt.pharma_with_id"], ["model.demo_dbt.fact_sales", "model.demo_dbt.stg_sales"], ["model.demo_dbt.stg_sales", "model.demo_dbt.pharma_with_id"], ["model.demo_dbt.audit_helper", "model.demo_dbt.fact_sales"]]}, "invocations": [{"invocation_id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "detected_at": null, "command": "run", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, {"invocation_id": "7d9529d3-7cea-454d-a160-231f2f7ac4ee", "detected_at": null, "command": "run", "selected": "audit_helper", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.elementary.test_result_rows": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_subchannel": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_distributor": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_artifacts_hashes": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_customer": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_country": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.model_run_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_product": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_customer": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_sales_team": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.snapshot_run_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.pharma_with_id": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.alerts_dbt_source_freshness": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_models": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.metadata": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_channel": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.alerts_dbt_tests": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_invocations": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_source_freshness_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_month": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_run_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_sales_team": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_distributor": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_country": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_product": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_city": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_channel": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_sales_rep": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_seeds": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_sources": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_sales_rep": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.audit_helper": "7d9529d3-7cea-454d-a160-231f2f7ac4ee", "model.elementary.alerts_dbt_models": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.elementary_test_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.job_run_results": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_columns": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_tests": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_sales": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_month": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.monitors_runs": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.dim_city": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.enriched_exposures": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.alerts_schema_changes": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.data_monitoring_metrics": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.fact_sales": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.anomaly_threshold_sensitivity": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_metrics": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.metrics_anomaly_score": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.demo_dbt.stg_subchannel": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.elementary_exposures": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.alerts_anomaly_detection": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_snapshots": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.schema_columns_snapshot": "155384a0-8c84-4ff0-bd3a-17c858f44f33", "model.elementary.dbt_exposures": "155384a0-8c84-4ff0-bd3a-17c858f44f33"}, "invocations_job_identification": {}, "env": {"project_name": "demo_dbt", "env": "dev", "warehouse_type": "snowflake"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "d1a836ee-746d-41dd-a3cb-38a78807ef6d", "anonymous_warehouse_id": "e11fb5cf1251b6b6fc51422b8d478c42e16de416e424ee1cf9dc203a06ec6f9e"}}